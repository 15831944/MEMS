//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.18063
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace MEMS.Client.Sale.SaleService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="SaleService.ISaleService")]
    public interface ISaleService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/getAllSaleOrderList", ReplyAction="http://tempuri.org/ISaleService/getAllSaleOrderListResponse")]
        System.Collections.Generic.List<MEMS.DB.ExtModels.SaleOrder> getAllSaleOrderList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/getSaleOrderbyId", ReplyAction="http://tempuri.org/ISaleService/getSaleOrderbyIdResponse")]
        MEMS.DB.Models.T_saleorder getSaleOrderbyId(int saleorderid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/getSaleOrderList", ReplyAction="http://tempuri.org/ISaleService/getSaleOrderListResponse")]
        System.Collections.Generic.List<MEMS.DB.ExtModels.SaleOrder> getSaleOrderList(string soNo, System.DateTime dtstart, System.DateTime dtend);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/AddNewSaleOrder", ReplyAction="http://tempuri.org/ISaleService/AddNewSaleOrderResponse")]
        bool AddNewSaleOrder(MEMS.DB.Models.T_saleorder so);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/UpdateSaleOrder", ReplyAction="http://tempuri.org/ISaleService/UpdateSaleOrderResponse")]
        bool UpdateSaleOrder(MEMS.DB.Models.T_saleorder so);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/DeleteSaleOrder", ReplyAction="http://tempuri.org/ISaleService/DeleteSaleOrderResponse")]
        bool DeleteSaleOrder(MEMS.DB.Models.T_saleorder so);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ISaleService/getSaleDetailbysoid", ReplyAction="http://tempuri.org/ISaleService/getSaleDetailbysoidResponse")]
        System.Collections.Generic.List<MEMS.DB.Models.T_saledetail> getSaleDetailbysoid(int soid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ISaleServiceChannel : MEMS.Client.Sale.SaleService.ISaleService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SaleServiceClient : System.ServiceModel.ClientBase<MEMS.Client.Sale.SaleService.ISaleService>, MEMS.Client.Sale.SaleService.ISaleService {
        
        public SaleServiceClient() {
        }
        
        public SaleServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public SaleServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaleServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public SaleServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.List<MEMS.DB.ExtModels.SaleOrder> getAllSaleOrderList() {
            return base.Channel.getAllSaleOrderList();
        }
        
        public MEMS.DB.Models.T_saleorder getSaleOrderbyId(int saleorderid) {
            return base.Channel.getSaleOrderbyId(saleorderid);
        }
        
        public System.Collections.Generic.List<MEMS.DB.ExtModels.SaleOrder> getSaleOrderList(string soNo, System.DateTime dtstart, System.DateTime dtend) {
            return base.Channel.getSaleOrderList(soNo, dtstart, dtend);
        }
        
        public bool AddNewSaleOrder(MEMS.DB.Models.T_saleorder so) {
            return base.Channel.AddNewSaleOrder(so);
        }
        
        public bool UpdateSaleOrder(MEMS.DB.Models.T_saleorder so) {
            return base.Channel.UpdateSaleOrder(so);
        }
        
        public bool DeleteSaleOrder(MEMS.DB.Models.T_saleorder so) {
            return base.Channel.DeleteSaleOrder(so);
        }
        
        public System.Collections.Generic.List<MEMS.DB.Models.T_saledetail> getSaleDetailbysoid(int soid) {
            return base.Channel.getSaleDetailbysoid(soid);
        }
    }
}
